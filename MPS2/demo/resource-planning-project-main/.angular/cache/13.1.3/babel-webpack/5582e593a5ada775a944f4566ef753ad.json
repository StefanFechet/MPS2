{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../core/services/snackbar.service\";\nimport * as i4 from \"../../core/services/auth.service\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/core\";\n\nfunction RegistrationComponent_mat_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 18);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r1.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", role_r1.viewValue, \" \");\n  }\n}\n\nexport let RegistrationComponent = /*#__PURE__*/(() => {\n  class RegistrationComponent {\n    constructor(fb, router, snackBar, authService) {\n      this.fb = fb;\n      this.router = router;\n      this.snackBar = snackBar;\n      this.authService = authService;\n      this.roles = [{\n        value: 0,\n        viewValue: 'student'\n      }, {\n        value: 1,\n        viewValue: 'profesor'\n      }];\n      this.hidePassword = true;\n      this.users = [];\n    }\n\n    ngOnInit() {\n      this.initForm();\n    }\n\n    initForm() {\n      this.signinForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required],\n        confirm_password: ['', Validators.required],\n        first_name: ['', Validators.required],\n        last_name: ['', Validators.required]\n      });\n    }\n\n    loginUser() {\n      let userExists = false;\n      let currentUser;\n      this.users.forEach(user => {\n        if (this.signinForm.value.email == user.mail && this.signinForm.value.password == user.parola) {\n          userExists = true;\n          currentUser = user;\n        }\n      });\n\n      if (userExists) {\n        this.authService.signIn(currentUser);\n        this.router.navigate(['dashboard']);\n        this.snackBar.openSnackBar('Successfully logged in!', 'success-snackbar');\n      } else {\n        this.snackBar.openSnackBar('User doesn\\'t exist.', 'error-snackbar');\n      }\n    }\n\n  }\n\n  RegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n    return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.SnackbarService), i0.ɵɵdirectiveInject(i4.AuthService));\n  };\n\n  RegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationComponent,\n    selectors: [[\"app-registration\"]],\n    decls: 45,\n    vars: 7,\n    consts: [[1, \"container-fluid\"], [1, \"row\", 2, \"height\", \"90vh\"], [1, \"col-6\", 2, \"display\", \"flex\", \"align-items\", \"center\"], [1, \"auth-wrapper\"], [1, \"form-signin\", 3, \"formGroup\"], [1, \"welcome-text\"], [\"matBadge\", \"15\", \"matBadgeColor\", \"warn\", 1, \"welcome-text-title\"], [\"formControlName\", \"last_name\", \"matInput\", \"\", \"placeholder\", \"Enter last name\"], [\"formControlName\", \"first_name\", \"matInput\", \"\", \"placeholder\", \"Enter first name\"], [\"formControlName\", \"email\", \"matInput\", \"\", \"placeholder\", \"Enter e-mail\"], [\"appearance\", \"fill\"], [3, \"select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"placeholder\", \"Enter password\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"formControlName\", \"confirm_password\", \"matInput\", \"\", \"placeholder\", \"Re-enter password\", 3, \"type\"], [\"type\", \"submit\", 1, \"btn\", \"btn-block\", \"btn-light\", 3, \"disabled\", \"click\"], [\"src\", \"/assets/login-img.svg\", 1, \"login-img\"], [3, \"value\"]],\n    template: function RegistrationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"form\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵtext(7, \" Register a new account \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\");\n        i0.ɵɵelementStart(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Nume\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\");\n        i0.ɵɵelementStart(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Prenume\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-form-field\");\n        i0.ɵɵelementStart(17, \"mat-label\");\n        i0.ɵɵtext(18, \"E-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementStart(21, \"mat-form-field\", 10);\n        i0.ɵɵelementStart(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-select\", 11);\n        i0.ɵɵtemplate(25, RegistrationComponent_mat_option_25_Template, 2, 2, \"mat-option\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-form-field\");\n        i0.ɵɵelementStart(27, \"mat-label\");\n        i0.ɵɵtext(28, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 13);\n        i0.ɵɵelementStart(30, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function RegistrationComponent_Template_button_click_30_listener() {\n          return ctx.hidePassword = !ctx.hidePassword;\n        });\n        i0.ɵɵelementStart(31, \"mat-icon\");\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-form-field\");\n        i0.ɵɵelementStart(34, \"mat-label\");\n        i0.ɵɵtext(35, \"Confirm password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 15);\n        i0.ɵɵelementStart(37, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function RegistrationComponent_Template_button_click_37_listener() {\n          return ctx.hidePassword = !ctx.hidePassword;\n        });\n        i0.ɵɵelementStart(38, \"mat-icon\");\n        i0.ɵɵtext(39);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function RegistrationComponent_Template_button_click_40_listener() {\n          return ctx.loginUser();\n        });\n        i0.ɵɵtext(41, \"Register \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 2);\n        i0.ɵɵelementStart(43, \"div\");\n        i0.ɵɵelement(44, \"img\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.signinForm);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.signinForm.status == \"INVALID\");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i5.MatLabel, i1.DefaultValueAccessor, i6.MatInput, i1.NgControlStatus, i1.FormControlName, i7.MatSelect, i8.NgForOf, i9.MatButton, i5.MatSuffix, i10.MatIcon, i11.MatOption],\n    styles: [\".auth-wrapper[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:flex-end}.form-signin[_ngcontent-%COMP%]{width:80%;max-width:400px;margin-right:15%}.login-img[_ngcontent-%COMP%]{width:70%;max-width:800px;height:auto}@media (max-width: 1200px){.login-img[_ngcontent-%COMP%]{width:90%}}.welcome-text-title[_ngcontent-%COMP%]{font-size:32px;line-height:40px;margin-bottom:40px;color:#d3d3d3}.password-toggler[_ngcontent-%COMP%]{position:absolute;float:right;margin-left:-20px;cursor:pointer}.mat-form-field[_ngcontent-%COMP%]{width:100%}.mat-form-field-flex[_ngcontent-%COMP%]{background:none}\"]\n  });\n  return RegistrationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}